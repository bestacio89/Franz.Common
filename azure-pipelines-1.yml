trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: 'Secrets and variables'
- name: buildConfiguration
  value: 'Release'
- name: projectName
  value: 'Franz.Common'

steps:
  # üßæ Checkout code
  - checkout: self
    persistCredentials: true

  # ‚öôÔ∏è .NET setup
  - task: UseDotNet@2
    displayName: 'Use .NET SDK (latest)'
    inputs:
      packageType: 'sdk'
      version: '9.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  # üîß Restore dependencies
  - script: dotnet restore
    displayName: 'Restore dependencies'

  # üèóÔ∏è Build
  - script: dotnet build --configuration $(buildConfiguration) --no-restore
    displayName: 'Build solution'

  # üß™ Tests
  - script: dotnet test --configuration $(buildConfiguration) --no-build --logger trx
    displayName: 'Run unit tests'

  # üì¶ Pack
  - script: dotnet pack --configuration $(buildConfiguration) --no-build --output $(outputDir)
    displayName: 'Pack NuGet packages'

  # üöÄ Publish to FranzPlatform feed (only on main)
  - task: NuGetCommand@2
    displayName: 'Publish packages to FranzPlatform feed'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    inputs:
      command: 'push'
      publishVstsFeed: '$(feedName)'
      packagesToPush: '$(outputDir)/*.nupkg'
      allowPackageConflicts: true

  # üîÅ Mirror to GitHub
  - script: |
      echo "##[group]Configure Git"
      git config user.name "Azure DevOps"
      git config user.email "build@azure.devops"
      echo "##[endgroup]"

      echo "##[group]Setup GitHub remote"
      git remote remove github || true
      git remote add github "https://$(GITHUB_USER):$(GITHUB_TOKEN)@github.com/bestacio89/Franz.Common.git"
      git remote -v
      echo "##[endgroup]"

      CURRENT_BRANCH=$(echo "$(Build.SourceBranchName)" | tr '[:upper:]' '[:lower:]')
      echo "Normalized branch: $CURRENT_BRANCH"
      echo "##[group]Push branch to GitHub"
      git push github HEAD:refs/heads/$CURRENT_BRANCH
      echo "##[endgroup]"
    displayName: 'Mirror branch to GitHub'

  # ü¶ä Mirror to GitLab
  - script: |
      echo "##[group]Setup GitLab remote"
      git remote remove gitlab || true
      git remote add gitlab "https://$(GITLAB_USER):$(GITLAB_TOKEN)@gitlab.com/bernardo.estacio89/franz.common.git"
      git remote -v
      echo "##[endgroup]"

      CURRENT_BRANCH=$(echo "$(Build.SourceBranchName)" | tr '[:upper:]' '[:lower:]')
      echo "Normalized branch: $CURRENT_BRANCH"
      echo "##[group]Push branch to GitLab"
      git push gitlab HEAD:refs/heads/$CURRENT_BRANCH
      echo "##[endgroup]"
    displayName: 'Mirror branch to GitLab'
